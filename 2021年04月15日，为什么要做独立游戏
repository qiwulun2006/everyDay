今天重温了一遍番茄工作法的小册子。当知道方向却执行力不足的时候，手头上有一个可以上弦的番茄小闹钟滴滴答答地响着是一个很不错的开始。

番茄工作法是很简单的方法，却能写成一本200多页的书。其实里面大部分都是在从正面，或者反面来进行各种论述。

比如说，一个滴滴答答的闹钟是不是会影响心情？只工作25分钟就休息会不会太短了，我就习惯一写代码就写2小时不中断才过瘾？

你要是相信番茄工作法是有用的，那么这个工作法就是很简单的，但是你若自以为是地有各种疑问，那番茄工作法也可以很复杂。

作者为了证明自己的工作方法是很有效的，不得不花200多页来用几十年的实践经验来论证种种问题。

当你知道你的疑问在书里都写过了，那么你看待这个简单的番茄工作法的态度也就不一样了。你才会觉得这是一个有深度的内容。

有的时候，灵感会突然出现，是一个非常好的想法，这个灵感可能酝酿很长时间的思考，也可能是偶然触发。

如果你是一个独立游戏工作者，你可以直接感谢自己有这么好的灵感。但如果你身处一个团队，你就要像番茄工作法的作者一样，明知道是有效的，但还是要论证200多页。

你的灵感出现得越突然，其他人就会越怀疑你的想法不成熟，或者干脆，他们更不成熟地直接走到你的相反面。因为既然你的想法是不成熟的，那么跟你对着干应该总没错。尤其是对方有相当的话语权的时候。

但有些结论，即使不经过深层论述，也是人人都可以看出来，比如说别踩狗屎。

但是如果有个外星人问你：为什么别踩狗屎。还要跟你好好辩论一下的时候，你真的未必能给出非常好的解答。

比如说鞋会变脏，觉得恶心等等你可能很难一时间想出所有的坏处。尤其是这个坏处隐藏得非常深的时候，比如说去面试踩到狗屎结果面试官闻到了狗屎味以为你是身上发出来的，结果因此错失了一个面试。

再比如说踩到狗屎，去超市花钱买纸，结果超市老板说你把他的地弄脏了，揪着你让你赔钱，你身上就只有100块钱，都赔给了超市，然后没钱打车回家，只好走路回去。路上遇到了一个洒水车喷了你一身水，结果重感冒了。

一周什么都干不了。这些事情发生之后，这个外星人可能会说：你当初也没说清楚踩狗屎会有这么多坏处，你要把这些坏处都说出来，我不就不踩狗屎了么？或者这个外星人会说，这和踩狗屎没关系，谁能想到会有这么多事呢？

仅凭直觉上，我们也都清楚这条规则：不要踩狗屎。现在我们把这条规则换成其他的内容，把外星人换成和你一起工作的队友。

当你深思熟虑或者灵感爆发做了一个决定，而不得不去和其他成员论证的时候，你会发现你真的未必就能把为什么要这么做解释得非常透彻。

你可以说一些简单的解释，比如鞋会变脏，对方马上答复你，我可以擦鞋。你说我会觉得恶心，对方还会答复你：想吐我这里有纸袋。

而如果后面发生的事情，即使证明你是对的，那么第一，团队里没有人记得当初的这个决策场景，第二，没人会在乎，第三，对方可以很轻易的回答你：谁能想到会有这么多事呢。

后来你会发现，你的队友有无穷的理由来阻止你达成你想做的事情。尤其是对方有相当的话语权的时候。

而且，游戏的开发，很多时候出于灵感，或者直觉，所以也这不是一个可以论证的数学问题。
